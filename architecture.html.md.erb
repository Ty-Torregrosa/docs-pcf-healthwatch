---
title: Healthwatch Architecture
owner: Healthwatch
---

This topic describes the architecture of the Healthwatch and Healthwatch Exporter tiles.


## <a id='architecture'></a> Architecture

The following diagram shows how Healthwatch and its exporters are commonly deployed for
multi-foundation monitoring:

![a diagram representing the relationship between a control plane and the foundations that federate to it](images/ControlPlaneArchitecture.png)


## <a id='healthwatch'></a> Healthwatch Tile

The Healthwatch tile installs three components: TSDB, Grafana, and MySQL.
MySQL is used only to store the Grafana settings and does not store any time series data.

You can deploy the Healthwatch tile in high availability (HA) mode
with three MySQL nodes and two MySQL Proxy nodes,
or in non-HA mode with one MySQL node and one MySQL Proxy node.
You can also scale Grafana horizontally beyond the default single VM.
You can scale TSDB vertically but should not scale it horizontally.
An Nginx proxy is deployed in front of TSDB to authorize and encrypt metrics stored in TSDB.

![a diagram that shows how the TSDB, MySQL instance, and Nginx proxy relate to the Grafana instance](images/Healthwatch.png)

### <a id='network-rules'></a> Required Networking Rules for Healthwatch

This section only covers the networking rules for the Healthwatch tile.
The Exporter tiles require additional networking rules,
which can be found in their respective sections.

| This Healthwatch component…          | Must communicate with…                                                                                        | Default TCP Port                                                   | Notes                                                                   |
|--------------------------|---------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|----------------------------|-------------------------------------------------------------------------|
| grafana                  | <ul> <li>tsdb</li><li>pxc-proxy</li><li>External alerting urls</li><li>External data sources</li><li>External authentication</li><li>External SMTP server</li> </ul>                         |<ul> <li>4449</li><li>3306</li> </ul>          | Additional networking rules might be required for external connections listed. For example, 443 for UAA. |
| blackbox-exporter        | <ul> <li>External Canary Urls</li> </ul>                     |<ul></ul>  |  Networking rules might be required depending on the external url setup                                                                       |
| tsdb                     | <ul> <li> All exporter vms </li> </ul>                        |<ul> <li>9090</li></ul>  |    All exporter vms including blackbox-exporter and the corresponding exporter vms from the Exporter tile for the runtime (TAS and/or TKG-i)  |
| tsdb (pks cluster discovery) | For each cluster: <ul> <li> Kube API Server </li><li> Kube Controller Manager </li> <li> Kube Scheduler</li> <li> ETCD (telegraf output plugin) </li> </ul> | <ul> <li>8443</li><li>10252</li><li>10251</li><li>10200</li></ul>  |    These ports are only needed if configuring PKS Cluster Discovery  |

#### <a id='steps-for-configuring-ports-on-nsx-t'></a> Steps for configuring ports on NSX-T

1. Log into the NSX-T UI and figure out the IP
    of your cluster's API virtual server
1. Do an API call to get that virtual server's JSON:
    ```
    curl -u 'nsx-t-username:nsx-t-password' https://NSX-MGR/api/v1/loadbalancer/virtual-servers/VIRTUAL-SERVER-UUID
    ```

   Where:
   - `NSX-MGR` is the OpsMan deployed to NSX-T (? this is probs wrong)
   - `VIRTUAL-SERVER-UUID` is the unique ID that identifies the thing

1. Modify that JSON to have the additional ports that Healthwatch needs,
    and do a PUT to the API to update the virtual server
    ```
    curl -X PUT -u 'nsx-t-username:nsx-t-password' https://NSX-MGR/api/v1/loadbalancer/virtual-servers/VIRTUAL-SERVER-UUID -X 'X-Allow-Overwrite: true' -d 'MODIFIED-JSON-DATA'
    ```

   Where:
   - `NSX-MGR`
   - `VIRTUAL-SERVER-UUID`
   - `MODIFIED-JSON-DATA`

## <a id='healthwatch-tas'></a> Healthwatch Exporter for TAS for VMs

The Healthwatch Exporter for TAS for VMs installs up to three VMs.
Each VM processes a metric type from the Firehose: timer, gauge, or counter.
An operator can choose to deploy all three VMs or any subset thereof.
Metrics are then exposed on a secured endpoint in TSDB exposition format.
You can scale these VMs vertically but should not scale them horizontally.

![a diagram showing the three discrete VMs that the Healthwatch Exporter for TAS for VMs installs, which send timer, gauge, and counter metrics to the RLP endpoint](images/HealthwatchExporterforPAS.png)


### <a id='network-rules-tas'></a> Required Networking Rules for Healthwatch Exporter for TAS for VMs

| This Healthwatch component…          | Must communicate with…                                                                                        | Default TCP Port                                                   | Notes                                                                   |
|--------------------------|---------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|----------------------------|-------------------------------------------------------------------------|
| bosh-deployments-exporter     | <ul><li>BOSH director UAA</li> <li>BOSH director</li></ul>                         |<ul>  <li>8443</li><li>25555</li> </ul>          | |
| bosh-health-exporter        | <ul> <li>BOSH director UAA</li><li>BOSH director</li> </ul>                     |<ul> <li>8443</li><li>25555</li> </ul>  |  |
| cert-expiration-exporter   | <ul> <li> Ops Manager </li> </ul>                        |<ul> <li>443</li></ul>  | |
| pas-exporter-counter   | <ul> <li> RLP nozzle </li> </ul>                        |<ul> <li>8082</li></ul>  | |
| pas-exporter-gauge   | <ul> <li> RLP nozzle </li> </ul>                        |<ul> <li>8082</li></ul>  | |
| pas-exporter-timer   | <ul> <li> RLP nozzle </li> </ul>                        |<ul> <li>8082</li></ul>  | |
| pas-sli-exporter   | <ul> <li> CAPI </li><li> UAA </li> </ul>                        |<ul> <li>443</li><li>443</li></ul>  | |

## <a id='healthwatch-pks'></a> Healthwatch Exporter for PKS

The Healthwatch Exporter for PKS installs a single VM that collects health metrics from the BOSH Director.
This VM obtains health metrics through the Firehose similarly to TAS for VMs.
Metrics are then exposed on a secured endpoint in TSDB exposition format.
You can scale this VM vertically but should not scale it horizontally.

![a diagram showing the single VM that the Healthwatch Exporter for PKS installs, which collects metrics from the BOSH Director](images/HealthwatchExporterforPKS.png)


### <a id='network-rules-pks'></a> Required Networking Rules for Healthwatch Exporter for PKS

| This Healthwatch component…          | Must communicate with…                                                                                        | Default TCP Port                                                   | Notes                                                                   |
|--------------------------|---------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|----------------------------|-------------------------------------------------------------------------|
| bosh-deployments-exporter     | <ul><li>BOSH director UAA</li> <li>BOSH director</li></ul>                         |<ul>  <li>8443</li><li>25555</li> </ul>          | |
| bosh-health-exporter        | <ul> <li>BOSH director UAA</li><li>BOSH director</li> </ul>                     |<ul>  <li>8443</li><li>25555</li> </ul>  |  |
| cert-expiration-exporter   | <ul> <li> Ops Manager </li> </ul>                        |<ul> <li>443</li></ul>  | |
| pks-exporter   | <ul> <li>BOSH director UAA</li><li>BOSH director metrics</li> </ul>                        |<ul> <li>8443</li><li>25595</li></ul>  | |
| pks-sli-exporter   | <ul> <li> PKS API UAA </li><li> PKS API</li> </ul>                        |<ul>  <li>8443</li><li>9021</li> </ul>  | |
